{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "imp",
  "word": "identifier",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expr"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_newStatement"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_expr"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "intLiteral"
        },
        {
          "type": "SYMBOL",
          "name": "floatLiteral"
        },
        {
          "type": "SYMBOL",
          "name": "charLiteral"
        },
        {
          "type": "SYMBOL",
          "name": "stringLiteral"
        },
        {
          "type": "SYMBOL",
          "name": "call"
        }
      ]
    },
    "call": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expr"
          },
          {
            "type": "SYMBOL",
            "name": "_expr"
          }
        ]
      }
    },
    "intLiteral": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\d+"
      }
    },
    "floatLiteral": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\d+\\.\\d*"
      }
    },
    "charLiteral": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "'"
          },
          {
            "type": "SYMBOL",
            "name": "_char"
          },
          {
            "type": "STRING",
            "value": "'"
          }
        ]
      }
    },
    "stringLiteral": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_char"
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "_char": {
      "type": "PATTERN",
      "value": "[^\\\\]|\\\\(n|r|t|'|\"|\\\\)"
    },
    "identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[A-Za-z]\\w*"
      }
    },
    "_SPACE": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "(\\s+|\\s*\\n[\\r\\t\\f\\v ]+)"
      }
    },
    "_newStatement": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "\n"
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "_SPACE"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}